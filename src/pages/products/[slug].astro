---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Breadcrumb from "~/features/breadcrumb.astro";
import MarkdownContainer from "~/features/markdown/markdown_container.astro";
import Info from "~/features/product/info.astro";
import ScreenshotAstro from "~/features/product/screenshot_astro.astro";
import Seo from "~/features/seo/seo.astro";
import Tags from "~/features/tags/tags.astro";
import Application from "~/layouts/application.astro";
import { flex } from "~pandacss/patterns";

export const getStaticPaths = (async () => {
  const collection = await getCollection("product");

  return collection.map((entry) => ({
    params: { slug: entry.slug },
    props: entry,
  }));
}) satisfies GetStaticPaths;

type Props = CollectionEntry<"product">;

const entry = Astro.props;
const { Content } = await entry.render();
---

<Application>
  <Seo
    slot="head"
    title={entry.data.title}
    description={entry.data.subhead}
    openGraph={{
      basic: {
        image: entry.data.images[0].src,
      },
    }}
  />

  <Breadcrumb
    list={[
      { label: "Home", href: "/" },
      { label: "Products", href: "/products" },
      { label: entry.data.title },
    ]}
  />

  <article class:list={flex({ direction: "column", gap: 32 })}>
    <ScreenshotAstro images={entry.data.images} />
    <Info product={entry.data} />
    <MarkdownContainer>
      <Content />
    </MarkdownContainer>
    {entry.data.tags.length > 0 && <Tags tags={entry.data.tags} />}
  </article>
</Application>
