---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { PostInfo, Thumbnail } from "~/features/blog";
import MarkdownContainer from "~/features/markdown/markdown_container.astro";
import Seo from "~/features/seo/seo.astro";
import { Tags } from "~/features/tags";
import Application from "~/layouts/application.astro";

export const getStaticPaths = (async () => {
  const collection = await getCollection("post");

  return collection.map((entry) => ({
    params: { slug: entry.slug },
    props: entry,
  }));
}) satisfies GetStaticPaths;

type Props = CollectionEntry<"post">;

const entry = Astro.props;
const { Content } = await entry.render();
---

<Application>
  <Seo
    slot="head"
    title={entry.data.title}
    description={entry.data.subhead}
    openGraph={{
      basic: {
        image: entry.data.image.src,
      },
    }}
  />

  <link slot="head" rel="preload" as="image" href={entry.data.image.src} />

  <Thumbnail image={entry.data.image} />
  <PostInfo post={entry.data} />
  <MarkdownContainer>
    <Content />
  </MarkdownContainer>
  {
    entry.data.tags && entry.data.tags.length > 0 && (
      <Tags tags={entry.data.tags} />
    )
  }
</Application>
